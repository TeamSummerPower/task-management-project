Index: src/main/java/com/example/tasksmspring/TasksMSpringApplication.java
===================================================================
diff --git a/src/main/java/com/example/tasksmspring/TasksMSpringApplication.java b/src/main/java/com/example/tasksmspring/TasksMSpringApplication.java
deleted file mode 100644
--- a/src/main/java/com/example/tasksmspring/TasksMSpringApplication.java	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
+++ /dev/null	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
@@ -1,13 +0,0 @@
-package com.example.tasksmspring;
-
-import org.springframework.boot.SpringApplication;
-import org.springframework.boot.autoconfigure.SpringBootApplication;
-
-@SpringBootApplication
-public class TasksMSpringApplication {
-
-    public static void main(String[] args) {
-        SpringApplication.run(TasksMSpringApplication.class, args);
-    }
-
-}
Index: settings.gradle
===================================================================
diff --git a/settings.gradle b/settings.gradle
deleted file mode 100644
--- a/settings.gradle	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
+++ /dev/null	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
@@ -1,1 +0,0 @@
-rootProject.name = 'TasksMSpring'
Index: src/main/java/com/example/tasksmspring/users/User.java
===================================================================
diff --git a/src/main/java/com/example/tasksmspring/users/User.java b/src/main/java/com/example/tasksmspring/users/User.java
deleted file mode 100644
--- a/src/main/java/com/example/tasksmspring/users/User.java	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
+++ /dev/null	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
@@ -1,84 +0,0 @@
-package com.example.tasksmspring.users;
-
-import com.example.tasksmspring.tasks.Priority;
-import jakarta.persistence.*;
-
-@Entity
-@Table(name = "user")
-public class User {
-    @Id
-    @GeneratedValue(strategy = GenerationType.IDENTITY)
-    private long id;
-    @Column(name = "first_name")
-    private String firstName;
-    @Column(name = "last_name")
-    private String lastName;
-    @Column(name = "username")
-    private String userName;
-    @Column(name = "password")
-    private String password;
-    @Enumerated(EnumType.STRING)
-    @Column(name = "priority")
-    private Priority priority;
-
-    public User(Long id, String firstName, String lastName, String userName, String password, Priority priority) {
-        this.id = id;
-        this.firstName = firstName;
-        this.lastName = lastName;
-        this.userName = userName;
-        this.password = password;
-        this.priority = priority;
-    }
-
-    public User() {
-
-    }
-
-    public long getId() {
-        return id;
-    }
-
-    public void setId(long id) {
-        this.id = id;
-    }
-
-    public String getFirstName() {
-        return firstName;
-    }
-
-    public void setFirstName(String firstName) {
-        this.firstName = firstName;
-    }
-
-    public String getLastName() {
-        return lastName;
-    }
-
-    public void setLastName(String lastName) {
-        this.lastName = lastName;
-    }
-
-    public String getUserName() {
-        return userName;
-    }
-
-    public void setUserName(String userName) {
-        this.userName = userName;
-    }
-
-    public String getPassword() {
-        return password;
-    }
-
-    public void setPassword(String password) {
-        this.password = password;
-    }
-
-    public Priority getPriority() {
-        return priority;
-    }
-
-    public void setPriority(Priority priority) {
-        this.priority = priority;
-    }
-}
Index: gradle/wrapper/gradle-wrapper.properties
===================================================================
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
deleted file mode 100644
--- a/gradle/wrapper/gradle-wrapper.properties	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
+++ /dev/null	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
@@ -1,6 +0,0 @@
-distributionBase=GRADLE_USER_HOME
-distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-8.1.1-bin.zip
-networkTimeout=10000
-zipStoreBase=GRADLE_USER_HOME
-zipStorePath=wrapper/dists
Index: src/main/java/com/example/tasksmspring/users/Role.java
===================================================================
diff --git a/src/main/java/com/example/tasksmspring/users/Role.java b/src/main/java/com/example/tasksmspring/users/Role.java
deleted file mode 100644
--- a/src/main/java/com/example/tasksmspring/users/Role.java	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
+++ /dev/null	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
@@ -1,8 +0,0 @@
-package com.example.tasksmspring.users;
-
-import com.fasterxml.jackson.databind.annotation.JsonSerialize;
-
-@JsonSerialize
-public enum Role {
-    USER, ADMIN, OWNER;
-}
Index: src/main/java/com/example/tasksmspring/users/UserRepository.java
===================================================================
diff --git a/src/main/java/com/example/tasksmspring/users/UserRepository.java b/src/main/java/com/example/tasksmspring/users/UserRepository.java
deleted file mode 100644
--- a/src/main/java/com/example/tasksmspring/users/UserRepository.java	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
+++ /dev/null	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
@@ -1,10 +0,0 @@
-package com.example.tasksmspring.users;
-
-import com.example.tasksmspring.users.User;
-import org.springframework.data.jpa.repository.JpaRepository;
-
-import java.util.Optional;
-
-public interface UserRepository extends JpaRepository<User, Long> {
-    Optional<User> findByUserName(String userName);
-}
Index: src/main/java/com/example/tasksmspring/tasks/Task.java
===================================================================
diff --git a/src/main/java/com/example/tasksmspring/tasks/Task.java b/src/main/java/com/example/tasksmspring/tasks/Task.java
deleted file mode 100644
--- a/src/main/java/com/example/tasksmspring/tasks/Task.java	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
+++ /dev/null	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
@@ -1,85 +0,0 @@
-package com.example.tasksmspring.tasks;
-
-import com.example.tasksmspring.users.User;
-import jakarta.persistence.*;
-
-@Entity
-@Table(name = "task")
-public class Task {
-    @Id
-    @GeneratedValue(strategy = GenerationType.IDENTITY)
-    private long id;
-    @Column(name = "title")
-    private String title;
-    @Column(name = "description")
-    private String description;
-    @Column(name = "is_rec")
-    private boolean isRec;
-    @ManyToOne(fetch = FetchType.LAZY)
-    @JoinColumn(name = "user_id")
-    private User user;
-    @Enumerated(EnumType.STRING)
-    @Column(name = "priority")
-    private Priority priority;
-
-    public Task(Long id, String title, String description, boolean isRec, User user, Priority priority) {
-        this.id = id;
-        this.title = title;
-        this.description = description;
-        this.isRec = isRec;
-        this.user = user;
-        this.priority = priority;
-    }
-
-    public Task() {
-
-    }
-
-    public long getId() {
-        return id;
-    }
-
-    public void setId(long id) {
-        this.id = id;
-    }
-
-    public String getTitle() {
-        return title;
-    }
-
-    public void setTitle(String title) {
-        this.title = title;
-    }
-
-    public String getDescription() {
-        return description;
-    }
-
-    public void setDescription(String description) {
-        this.description = description;
-    }
-
-    public boolean isRec() {
-        return isRec;
-    }
-
-    public void setRec(boolean rec) {
-        isRec = rec;
-    }
-
-    public User getUser() {
-        return user;
-    }
-
-    public void setUser(User user) {
-        this.user = user;
-    }
-
-    public Priority getPriority() {
-        return priority;
-    }
-
-    public void setPriority(Priority priority) {
-        this.priority = priority;
-    }
-}
Index: src/main/resources/application.yml
===================================================================
diff --git a/src/main/resources/application.yml b/src/main/resources/application.yml
deleted file mode 100644
--- a/src/main/resources/application.yml	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
+++ /dev/null	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
@@ -1,19 +0,0 @@
-server:
-  error:
-    include-message: always
-    include-binding-errors: always
-  port: 8080
-
-spring:
-  datasource:
-    password: 84268426
-    url: jdbc:mysql://localhost:3306/task_management_tool
-    username: root
-    driver-class-name: com.mysql.cj.jdbc.Driver
-  jpa:
-    hibernate:
-      ddl-auto: update
-    show-sql: true
-    properties:
-      hibernate:
-        format_sql: true
Index: src/main/java/com/example/tasksmspring/functionality/AppFunctionality.java
===================================================================
diff --git a/src/main/java/com/example/tasksmspring/functionality/AppFunctionality.java b/src/main/java/com/example/tasksmspring/functionality/AppFunctionality.java
deleted file mode 100644
--- a/src/main/java/com/example/tasksmspring/functionality/AppFunctionality.java	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
+++ /dev/null	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
@@ -1,102 +0,0 @@
-package com.example.tasksmspring.functionality;
-
-import com.example.tasksmspring.tasks.Task;
-import com.example.tasksmspring.users.User;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.http.HttpStatus;
-import org.springframework.http.ResponseEntity;
-import org.springframework.web.bind.annotation.*;
-
-import java.util.List;
-import java.util.Optional;
-
-@RestController
-@RequestMapping("app")
-public class AppFunctionality {
-    private final DataBaseManagement dataBaseManagement;
-    @Autowired
-    public AppFunctionality(DataBaseManagement dataBaseManagement) {
-        this.dataBaseManagement = dataBaseManagement;
-    }
-    @PostMapping("/user/register")
-    public ResponseEntity<Long> registerUser(@RequestBody User user) {
-        boolean isUsernameTaken = dataBaseManagement.getUserByUserName(user).isPresent();
-        if (!isUsernameTaken) {
-            User newUser = dataBaseManagement.createUser(user);
-            return ResponseEntity.ok(newUser.getId());
-        } else {
-            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).build();
-        }
-    }
-    @PostMapping("/user/login")
-    public ResponseEntity<Long> loginUser(@RequestBody User user) {
-        Optional<User> optionalUser = dataBaseManagement.getUserByUserName(user);
-        if (optionalUser.isPresent()) {
-            User existingUser = optionalUser.get();
-            if (existingUser.getPassword().equals(user.getPassword())) {
-                return ResponseEntity.ok(existingUser.getId());
-            } else {
-                return ResponseEntity.status(HttpStatus.UNAUTHORIZED).build();
-            }
-        } else {
-            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).build();
-        }
-    }
-    @PostMapping("/user/createTask")
-    public ResponseEntity<Long> createTask(@RequestBody Task task) {
-        Task newTask = dataBaseManagement.createTask(task);
-        if (newTask != null) {
-            return ResponseEntity.ok(newTask.getId());
-        } else {
-            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
-        }
-    }
-    @DeleteMapping("/user/deleteTasks")
-    public ResponseEntity<String> deleteTasks(@RequestBody List<Long> taskIds) {
-        dataBaseManagement.deleteTask(taskIds);
-        return ResponseEntity.ok("Tasks were deleted successfully");
-    }
-    @PutMapping("/user/updateTask/{taskId}")
-    public ResponseEntity<String> updateTask(@PathVariable Long taskId, @RequestBody Task updatedTask) {
-        Optional<Task> taskOptional = dataBaseManagement.getTaskById(taskId);
-
-        if (taskOptional.isPresent()) {
-            Task existingTask = taskOptional.get();
-
-            if (updatedTask.getTitle() != null) {
-                existingTask.setTitle(updatedTask.getTitle());
-            }
-            if (updatedTask.getDescription() != null) {
-                existingTask.setDescription(updatedTask.getDescription());
-            }
-            if (updatedTask.getPriority() != null) {
-                existingTask.setPriority(updatedTask.getPriority());
-            }
-            if (updatedTask.isRec()) {
-                existingTask.setRec(updatedTask.isRec());
-            }
-
-            Task savedTask = dataBaseManagement.updateTask(existingTask);
-
-            if (savedTask != null) {
-                return ResponseEntity.ok("Task updated successfully");
-            } else {
-                return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
-            }
-        } else {
-            return ResponseEntity.notFound().build();
-        }
-    }
-    @PutMapping("/user/updatePassword/{userId}")
-    public ResponseEntity<String> updateUserPassword(@PathVariable Long userId, @RequestBody String newPassword) {
-        Optional<User> isExists = dataBaseManagement.getUserById(userId);
-        if (isExists.isPresent()) {
-            User user = isExists.get();
-            user.setPassword(newPassword);
-            dataBaseManagement.updateUser(user);
-            return ResponseEntity.ok("Password updated successfully");
-        } else {
-            return ResponseEntity.ok("No such user found");
-        }
-    }
-}
Index: src/main/java/com/example/tasksmspring/tasks/Priority.java
===================================================================
diff --git a/src/main/java/com/example/tasksmspring/tasks/Priority.java b/src/main/java/com/example/tasksmspring/tasks/Priority.java
deleted file mode 100644
--- a/src/main/java/com/example/tasksmspring/tasks/Priority.java	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
+++ /dev/null	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
@@ -1,8 +0,0 @@
-package com.example.tasksmspring.tasks;
-
-import com.fasterxml.jackson.databind.annotation.JsonSerialize;
-
-@JsonSerialize
-public enum Priority {
-    NOT_IMPORTANT, IMPORTANT, VERY_IMPORTANT, MANDATORY;
-}
Index: .gitignore
===================================================================
diff --git a/.gitignore b/.gitignore
deleted file mode 100644
--- a/.gitignore	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
+++ /dev/null	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
@@ -1,37 +0,0 @@
-HELP.md
-.gradle
-build/
-!gradle/wrapper/gradle-wrapper.jar
-!**/src/main/**/build/
-!**/src/test/**/build/
-
-### STS ###
-.apt_generated
-.classpath
-.factorypath
-.project
-.settings
-.springBeans
-.sts4-cache
-bin/
-!**/src/main/**/bin/
-!**/src/test/**/bin/
-
-### IntelliJ IDEA ###
-.idea
-*.iws
-*.iml
-*.ipr
-out/
-!**/src/main/**/out/
-!**/src/test/**/out/
-
-### NetBeans ###
-/nbproject/private/
-/nbbuild/
-/dist/
-/nbdist/
-/.nb-gradle/
-
-### VS Code ###
-.vscode/
Index: src/main/java/com/example/tasksmspring/tasks/TaskRepository.java
===================================================================
diff --git a/src/main/java/com/example/tasksmspring/tasks/TaskRepository.java b/src/main/java/com/example/tasksmspring/tasks/TaskRepository.java
deleted file mode 100644
--- a/src/main/java/com/example/tasksmspring/tasks/TaskRepository.java	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
+++ /dev/null	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
@@ -1,9 +0,0 @@
-package com.example.tasksmspring.tasks;
-
-import com.example.tasksmspring.tasks.Task;
-import org.springframework.data.jpa.repository.JpaRepository;
-import org.springframework.stereotype.Repository;
-
-@Repository
-public interface TaskRepository extends JpaRepository<Task, Long> {
-}
Index: src/test/java/com/example/tasksmspring/TasksMSpringApplicationTests.java
===================================================================
diff --git a/src/test/java/com/example/tasksmspring/TasksMSpringApplicationTests.java b/src/test/java/com/example/tasksmspring/TasksMSpringApplicationTests.java
deleted file mode 100644
--- a/src/test/java/com/example/tasksmspring/TasksMSpringApplicationTests.java	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
+++ /dev/null	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
@@ -1,13 +0,0 @@
-package com.example.tasksmspring;
-
-import org.junit.jupiter.api.Test;
-import org.springframework.boot.test.context.SpringBootTest;
-
-@SpringBootTest
-class TasksMSpringApplicationTests {
-
-    @Test
-    void contextLoads() {
-    }
-
-}
Index: build.gradle
===================================================================
diff --git a/build.gradle b/build.gradle
deleted file mode 100644
--- a/build.gradle	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
+++ /dev/null	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
@@ -1,47 +0,0 @@
-plugins {
-    id 'java'
-    id 'org.springframework.boot' version '3.1.1'
-    id 'io.spring.dependency-management' version '1.1.0'
-    id 'org.asciidoctor.jvm.convert' version '3.3.2'
-}
-
-group = 'com.example'
-version = '0.0.1-SNAPSHOT'
-
-java {
-    sourceCompatibility = '17'
-}
-
-repositories {
-    mavenCentral()
-}
-
-ext {
-    set('snippetsDir', file("build/generated-snippets"))
-}
-
-dependencies {
-    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
-    implementation 'org.springframework.boot:spring-boot-starter-web'
-    implementation 'org.springframework.boot:spring-boot-starter-web-services'
-    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
-    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
-    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
-    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
-    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
-    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
-    developmentOnly 'org.springframework.boot:spring-boot-devtools'
-    runtimeOnly 'com.mysql:mysql-connector-j'
-    testImplementation 'org.springframework.boot:spring-boot-starter-test'
-    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
-}
-
-tasks.named('test') {
-    outputs.dir snippetsDir
-    useJUnitPlatform()
-}
-
-tasks.named('asciidoctor') {
-    inputs.dir snippetsDir
-    dependsOn test
-}
Index: src/main/java/com/example/tasksmspring/functionality/DataBaseManagement.java
===================================================================
diff --git a/src/main/java/com/example/tasksmspring/functionality/DataBaseManagement.java b/src/main/java/com/example/tasksmspring/functionality/DataBaseManagement.java
deleted file mode 100644
--- a/src/main/java/com/example/tasksmspring/functionality/DataBaseManagement.java	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
+++ /dev/null	(revision 4c2ba9edfa705211ad65cfafdca344c471dd76b7)
@@ -1,48 +0,0 @@
-package com.example.tasksmspring.functionality;
-
-import com.example.tasksmspring.tasks.Task;
-import com.example.tasksmspring.tasks.TaskRepository;
-import com.example.tasksmspring.users.User;
-import com.example.tasksmspring.users.UserRepository;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.stereotype.Service;
-
-import java.util.List;
-import java.util.Optional;
-
-@Service
-public class DataBaseManagement {
-    private final TaskRepository taskRepository;
-    private final UserRepository userRepository;
-
-    @Autowired
-    public DataBaseManagement(TaskRepository taskRepository, UserRepository userRepository) {
-        this.taskRepository = taskRepository;
-        this.userRepository = userRepository;
-    }
-    public Task createTask (Task task) {
-        return taskRepository.save(task);
-    }
-    public void deleteTask(List<Long> taskIds) {
-        taskRepository.deleteAllById(taskIds);
-    }
-    public User createUser(User user) {
-        return userRepository.save(user);
-    }
-    public Optional<User> getUserByUserName(User user) {
-        return userRepository.findByUserName(user.getUserName());
-    }
-    public Optional<Task> getTaskById(Long id) {
-        return taskRepository.findById(id);
-    }
-    public Task updateTask(Task task) {
-        return taskRepository.save(task);
-    }
-    public void updateUser(User user) {
-        userRepository.save(user);
-    }
-    public Optional<User> getUserById(Long userId) {
-        return userRepository.findById(userId);
-    }
-
-}
